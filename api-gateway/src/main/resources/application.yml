eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
spring:
  environments:
    jwt-secret: fjdijfdijfidojifdjckxncs[cncknvldkrefinvdkdiifdfdfdkjfdkljlk
    routes:
      auth-service: http://auth-service
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: auth-service
              uri: lb://auth-service
              predicates:
                - Path= /api/v1/user/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: authServiceBreaker
                    fallbackUri: forward:/fallback/auth-service
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health
resilience4j:
  circuitbreaker:
    configs:
      defaults:
        sliding-window-size: 5
        permitted-number-of-calls-in-half-open-state: 5
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 60
        sliding-window-type: COUNT_BASED
        minimum-number-of-calls: 5
        register-health-indicator: true
  retry:
    configs:
      defaults:
        max-attempts: 3
        wait-duration: 10s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.io.IOException
